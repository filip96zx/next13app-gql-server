input OrderProductInput {
	productId: ID!
	variantId: ID!
	quantity: Int!
}

extend type Mutation {
	orderCreate(items: [OrderProductInput!]!): Order
	orderItemsUpdate(id: ID!, items: [OrderProductInput!]!): Order
	orderItemsIncrement(id: ID!, items: [OrderProductInput!]!): Order
}

extend type Query {
	order(id: ID!): Order
}

enum OrderStatus {
	DRAFT
	PENDING
	PAID
}

type Order {
	id: ID!
	items(skip: Int, first: Int): [OrderItem!]!
	status: OrderStatus!
	createdAt: DateTime
	updatedAt: DateTime
}

type OrderItem {
	id: ID!
	productId: ID!
	variantId: ID!
	quantity: Int!
	price: Int!
	name: String!
}
